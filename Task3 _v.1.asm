;This program translates large letters into small letters and vice versa. Implemented via a distorted ascii table.

section .text
global _start

;==========================================================================

_start:

read:
    mov rax, 0             ; ввод
    mov rdi, 0             ; stdin
    mov rsi, buff          ; указатель на буфер
    mov rdx, num_of_buf    ; колическтво символов
    syscall                ; обращение к ядру

    mov rcx, 0             ; занулили счетчик
    xor rax, rax

Replace:
    mov al, byte [buff + rcx] ; положили i ый элемет буфера
    mov bl, byte [table + rax] ; находим i ый элемент в измененной таблице ascii
    
    mov byte [buff + rcx], bl  ; ложит в буфер новую букву из измененной таблицы

    inc rcx                ; rcx++

    cmp rcx, num_of_buf    ; сравниваем rcx с 100
    jne Replace            ; если не равно 100 то идем на метку Replace если равно то идем дальше по коду

write:
    mov rax, 1             ; вывод
    mov rdi, 1             ; stdout
    mov rsi, buff          ; указатель на буффер
    mov rdx, num_of_buf    ; количество символов
    syscall                ; обращение к ядру

end:                       ; The end of the program
    mov rax, 60            ; выход           
    xor rdi, rdi           
    syscall                ; обращение к ядру


;==========================================================================

section .data

num_of_buf equ 100

buff:  times num_of_buf db 0

table: db   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
       db  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
       db  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47
       db  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63
       db  64, 97, 98, 99,100,101,102,103,104,105,106,107,108,109,110,111
       db 112,113,114,115,116,117,118,119,120,121,122, 91, 92, 93, 94, 95
       db  96, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79
       db  80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,123,124,125,126,127
       db 128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143
       db 144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159
       db 160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175
       db 176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191
       db 192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207
       db 208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223
       db 224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239
       db 240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
